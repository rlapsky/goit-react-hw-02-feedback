{"version":3,"sources":["components/feedBackOption/FeadBackOptions.jsx","components/notification/Notification.jsx","components/statistic/Statistic.jsx","components/feedBack/section/Section.jsx","components/feedBack/FeedBack.js","index.js"],"names":["FeadBackOptions","counterGood","counterNeutral","counterBad","onClick","Notification","message","Statistic","countTotalFeedback","countPositiveFeedbackPercentage","good","bad","neutral","Section","title","children","console","log","FeedBack","state","setState","prevState","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kNAYeA,EAVS,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACtD,OACE,qCACE,wBAAQC,QAASH,EAAjB,kBACA,wBAAQG,QAASF,EAAjB,qBACA,wBAAQE,QAASD,EAAjB,qBCDSE,EAJM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAO,6BAAKA,KCmBDC,EApBG,SAAC,GAMZ,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,gCACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,IACAC,EACI,EADJA,QAEA,OACE,mCACE,+BACE,wCAAWF,KACX,2CAAcE,KACd,uCAAUD,KACV,yCAAYH,KACZ,qDAAwBC,EAAxB,cCJOI,EAVC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAExB,OADAC,QAAQC,IAAI,CAAEF,aAEZ,oCACGD,GAAS,6BAAKA,IACdC,MCsDQG,E,4MAtDbC,MAAQ,CACNT,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAEPV,YAAc,WACZ,EAAKmB,UAAS,SAACC,GAAD,MAAgB,CAAEX,KAAMW,EAAUX,KAAO,O,EAEzDR,eAAiB,WACf,EAAKkB,UAAS,SAACC,GAAD,MAAgB,CAAET,QAASS,EAAUT,QAAU,O,EAE/DT,WAAa,WACX,EAAKiB,UAAS,SAACC,GAAD,MAAgB,CAAEV,IAAKU,EAAUV,IAAM,O,EAEvDH,mBAAqB,WACnB,OAAO,EAAKW,MAAMT,KAAO,EAAKS,MAAMR,IAAM,EAAKQ,MAAMP,S,EAEvDH,gCAAkC,WAChC,OAAOa,KAAKC,MAAO,EAAKJ,MAAMT,KAAO,EAAKF,qBAAwB,M,4CAGpE,WACE,OACE,qCACE,cAAC,EAAD,CAASM,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEb,YAAauB,KAAKvB,YAClBC,eAAgBsB,KAAKtB,eACrBC,WAAYqB,KAAKrB,eAIpBqB,KAAKhB,qBAAuB,EAC3B,cAAC,EAAD,CAAcF,QAAS,sBAEvB,cAAC,EAAD,CAASQ,MAAO,YAAhB,SACE,cAAC,EAAD,CACEN,mBAAoBgB,KAAKhB,qBACzBC,gCACEe,KAAKf,kCACDe,KAAKf,kCACL,EAENC,KAAMc,KAAKL,MAAMT,KACjBE,QAASY,KAAKL,MAAMP,QACpBD,IAAKa,KAAKL,MAAMR,e,GA9CPc,aCFvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6beb550b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeadBackOptions = ({ counterGood, counterNeutral, counterBad }) => {\r\n  return (\r\n    <>\r\n      <button onClick={counterGood}>Good</button>\r\n      <button onClick={counterNeutral}>Neutral</button>\r\n      <button onClick={counterBad}>Bad</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeadBackOptions;\r\n","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    return <h2>{message}</h2>;\r\n}\r\n\r\nexport default Notification;","import React from \"react\";\r\n\r\nconst Statistic = ({\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  good,\r\n  bad,\r\n  neutral,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {countTotalFeedback}</li>\r\n        <li>Positive feedback: {countPositiveFeedbackPercentage} %</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  console.log({ children });\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport FeadBackOptions from \"../feedBackOption/FeadBackOptions\";\r\nimport Notification from \"../notification/Notification\";\r\nimport Statistic from \"../statistic/Statistic\";\r\nimport Section from \"./section/Section\";\r\n\r\nclass FeedBack extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  counterGood = () => {\r\n    this.setState((prevState) => ({ good: prevState.good + 1 }));\r\n  };\r\n  counterNeutral = () => {\r\n    this.setState((prevState) => ({ neutral: prevState.neutral + 1 }));\r\n  };\r\n  counterBad = () => {\r\n    this.setState((prevState) => ({ bad: prevState.bad + 1 }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.bad + this.state.neutral;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeadBackOptions\r\n            counterGood={this.counterGood}\r\n            counterNeutral={this.counterNeutral}\r\n            counterBad={this.counterBad}\r\n          />\r\n        </Section>\r\n\r\n        {this.countTotalFeedback() < 1 ? (\r\n          <Notification message={\"No feedback given\"} />\r\n        ) : (\r\n          <Section title={\"Statistic\"}>\r\n            <Statistic\r\n              countTotalFeedback={this.countTotalFeedback()}\r\n              countPositiveFeedbackPercentage={\r\n                this.countPositiveFeedbackPercentage()\r\n                  ? this.countPositiveFeedbackPercentage()\r\n                  : 0\r\n              }\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n            />\r\n          </Section>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedBack;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FeedBack from \"./components/feedBack/FeedBack\";\n\nReactDOM.render(\n  <FeedBack />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}